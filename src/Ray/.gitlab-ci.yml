stages:
  - build
  - test
  - test-img
  - deploy

.windows-x86_64-build-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config Release --parallel 16
    - cmake --build build --target ALL_BUILD --config Asan --parallel 16
    - cmake --build build --target ALL_BUILD --config RelWithDebInfo --parallel 16
    - echo "Compile complete."
    - mkdir windows-x86_64
    - copy build/tests/Release/test_Ray.exe windows-x86_64
    - copy build/tests/Asan/test_Ray-asan.exe windows-x86_64
  artifacts:
    name: windows-x86_64
    paths:
      - windows-x86_64/
    expire_in: 1 week

.windows-arm64-build-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A ARM64 -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config Release --parallel 16
    - cmake --build build --target ALL_BUILD --config Debug --parallel 16
    - cmake --build build --target ALL_BUILD --config RelWithDebInfo --parallel 16
    - echo "Compile complete."
    - mkdir windows-arm64
    - copy build/tests/Release/test_Ray.exe windows-arm64
    - copy build/tests/Debug/test_Ray-dbg.exe windows-arm64
  artifacts:
    name: windows-arm64
    paths:
      - windows-arm64/
    expire_in: 1 week

.linux-build-job:
  stage: build
  tags:
    - linux
  script:
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - mkdir build_dbg
    - cd build_dbg
    - cmake .. -DCMAKE_BUILD_TYPE=Debug -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - mkdir build_dev
    - cd build_dev
    - cmake .. -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - cmake --build build_dbg --target all --parallel 16
    - cmake --build build_dev --target all --parallel 16
    - echo "Compile complete."
    - mkdir linux-x86_64
    - cp build/tests/test_Ray linux-x86_64
    - cp build_dbg/tests/test_Ray-dbg linux-x86_64
  artifacts:
    paths:
      - linux-x86_64/
    expire_in: 1 week

.macos-universal-build-job:
  stage: build
  tags:
    - macos
  script:
    - echo "Compiling the code..."
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_BUILD_TYPE=Release -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - mkdir build_dbg
    - cd build_dbg
    - cmake .. -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_BUILD_TYPE=Debug -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - mkdir build_dev
    - cd build_dev
    - cmake .. -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_BUILD_TYPE=RelWithDebInfo -DCMAKE_UNITY_BUILD=ON -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - cmake --build build_dbg --target all --parallel 16
    - cmake --build build_dev --target all --parallel 16
    - echo "Compile complete."
    - mkdir macos-universal
    - cp build/tests/test_Ray macos-universal
    - cp build_dbg/tests/test_Ray-dbg macos-universal
  artifacts:
    paths:
      - macos-universal/
    expire_in: 1 week

.windows-test-job:
  stage: test
  script:
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray" $TEST_ARGS.split(" ") $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$env:CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-perf-test-job:
  stage: test
  script:
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray" $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$env:CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-sde-test-job:
  stage: test
  script:
    - echo "Running tests..."
    - cd tests
    - '& "sde" $SDE_TEST_ARGS.split(" ") -- ../$BIN_DIR/test_Ray $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$env:CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-test-asan-job:
  stage: test
  script:
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray-asan" $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$env:CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.test-job:
  stage: test
  script:
    - echo "Running tests..."
    - cd tests
    - ../$BIN_DIR/test_Ray $TEST_ARGS $AUX_TEST_ARGS
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

windows-x86_64-build-job:
  extends:
    - .windows-x86_64-build-job
  tags:
    - windows,builder

windows-arm64-build-job:
  extends:
    - .windows-arm64-build-job
  tags:
    - windows,builder

linux-x86_64-build-job:
  extends:
    - .linux-build-job
  tags:
    - linux,builder

macos-universal-build-job:
  extends:
    - .macos-universal-build-job
  tags:
    - macos,builder

windows-x86_64-cpu-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu

windows-x86_64-cpu-sse2-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch SSE2'
    SDE_TEST_ARGS: '-p4p'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu,win10
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-sse41-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch SSE41'
    SDE_TEST_ARGS: '-pnr'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu,win10
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX'
    SDE_TEST_ARGS: '-snb'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx2-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX2'
    SDE_TEST_ARGS: '-hsw'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx512-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX512'
    SDE_TEST_ARGS: '-future'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-test-asan-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-asan-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,fastcpu
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-nv-test-asan-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .windows-test-asan-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,nv
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,amd

windows-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,nv

windows-x86_64-gpu-xe-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Xe --nocpu'
  allow_failure: true
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,xe

windows-x86_64-gpu-arc-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Arc --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-job
  tags:
    - windows,x86_64,arc

windows-arm64-cpu-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-arm64-build-job
  tags:
    - windows,arm64,fastcpu

windows-arm64-cpu-perf-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu --time_limit 13.9'
  extends:
    - .windows-perf-test-job
  needs:
    - windows-arm64-build-job
  tags:
    - windows,arm64,perf
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-cpu-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-job
  tags:
    - linux,x86_64,fastcpu

linux-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-job
  tags:
    - linux,x86_64,nv

linux-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .test-job
  allow_failure: true
  needs:
    - linux-x86_64-build-job
  tags:
    - linux,x86_64,amd

macos-x86_64-cpu-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-job
  tags:
    - macos,x86_64,fastcpu

macos-arm64-cpu-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-job
  tags:
    - macos,arm64,fastcpu

macos-arm64-gpu-m1-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-job
  tags:
    - macos,arm64,m1

deploy-job:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  needs:
    - windows-x86_64-build-job
    - windows-arm64-build-job
    - linux-x86_64-build-job
    - macos-universal-build-job
  artifacts:
    paths:
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
    expire_in: 1 week
  tags:
    - windows
  rules:
    - if: $CI_COMMIT_BRANCH
