stages:
  - build
  - test
  - deploy

.windows-build-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python scripts/update_version_string.py Ray.cpp
    - mkdir build
    - cd build
    - echo $UNITY
    - '& cmake .. -G "Visual Studio 17 2022" -A "$ARCH" -DCMAKE_UNITY_BUILD="$UNITY" -DENABLE_REF_IMPL=ON -DENABLE_VK_IMPL="$VK_IMPL" -DENABLE_DX_IMPL="$DX_IMPL"'
    - cd ..
    - cmake --build build --target ALL_BUILD --config $CONFIG --parallel 16
    - echo "Compile complete."
    - mkdir $BIN_DIR
    - copy build/tests/$CONFIG/$BIN_NAME $BIN_DIR
  artifacts:
    name: $BIN_DIR
    paths:
      - $BIN_DIR/
    expire_in: 1 week

.windows-shaders-check-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling shaders..."
    - python scripts/compile_shaders.py
    - git diff --quiet -- internal/shaders

.linux-build-job:
  stage: build
  tags:
    - linux
  script:
    - echo "Compiling the code..."
    - python scripts/update_version_string.py Ray.cpp
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_UNITY_BUILD=$UNITY -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - echo "Compile complete."
    - mkdir $BIN_DIR
    - cp build/tests/$BIN_NAME $BIN_DIR
  artifacts:
    name: $BIN_DIR
    paths:
      - $BIN_DIR/
    expire_in: 1 week

.linux-shaders-check-job:
  stage: build
  tags:
    - linux
  script:
    - echo "Compiling shaders..."
    - chmod +x third-party/spirv/linux/glslangValidator
    - chmod +x third-party/spirv/linux/spirv-opt
    - chmod +x third-party/spirv/linux/spirv-opt.sh
    - python scripts/compile_shaders.py
    - git diff --quiet -- internal/shaders

.macos-universal-build-job:
  stage: build
  tags:
    - macos
  script:
    - echo "Compiling the code..."
    - python3 scripts/update_version_string.py Ray.cpp
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_OSX_ARCHITECTURES="arm64;x86_64" -DCMAKE_BUILD_TYPE=$CONFIG -DCMAKE_UNITY_BUILD=$UNITY -DENABLE_REF_IMPL=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - echo "Compile complete."
    - mkdir macos-universal
    - cp build/tests/$BIN_NAME macos-universal
  artifacts:
    name: macos-universal
    paths:
      - macos-universal/
    expire_in: 1 week

.windows-test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - git clean -fx -e $BIN_DIR
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray" --mt $TEST_ARGS.split(" ") $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-perf-test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - '& git clean -fx -e "$BIN_DIR"'
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray" --mt $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-sde-test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - '& git clean -fx -e "$BIN_DIR"'
    - echo "Running tests..."
    - cd tests
    - '& "sde" $SDE_TEST_ARGS.split(" ") -- ../$BIN_DIR/test_Ray --mt $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.windows-test-asan-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - '& git clean -fx -e "$BIN_DIR"'
    - echo "Running tests..."
    - cd tests
    - '& "../$BIN_DIR/test_Ray-asan" $AUX_TEST_ARGS.split(" ")'
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - git clean -fx -e $BIN_DIR
    - echo "Running tests..."
    - cd tests
    - ../$BIN_DIR/test_Ray --mt $TEST_ARGS $AUX_TEST_ARGS
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

.test-tsan-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - git clean -fx -e $BIN_DIR
    - echo "Running tests..."
    - cd tests
    - ../$BIN_DIR/test_Ray-tsan --mt $AUX_TEST_ARGS
    - cd ../
  after_script:
    - cp tests/test_data/material_*.tga ./
    - cp tests/test_data/errors.txt ./
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - material_*.tga
      - errors.txt
    expire_in: 1 week

windows-x86_64-build-rel-job:
  variables:
    BIN_DIR: 'windows-x86_64'
    ARCH: 'x64'
    CONFIG: 'Release'
    BIN_NAME: 'test_Ray.exe'
    UNITY: 'ON'
    VK_IMPL: 'ON'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder

windows-x86_64-build-dbg-job:
  variables:
    BIN_DIR: 'windows-x86_64'
    ARCH: 'x64'
    CONFIG: 'Debug'
    BIN_NAME: 'test_Ray-dbg.exe'
    UNITY: 'OFF'
    VK_IMPL: 'ON'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-build-dev-job:
  variables:
    BIN_DIR: 'windows-x86_64'
    ARCH: 'x64'
    CONFIG: 'RelWithDebInfo'
    BIN_NAME: 'test_Ray-dev.exe'
    UNITY: 'OFF'
    VK_IMPL: 'ON'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-build-asan-job:
  variables:
    BIN_DIR: 'windows-x86_64'
    ARCH: 'x64'
    CONFIG: 'Asan'
    BIN_NAME: 'test_Ray-asan.exe'
    UNITY: 'OFF'
    VK_IMPL: 'ON'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-shaders-check-job:
  extends:
    - .windows-shaders-check-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-build-rel-job:
  variables:
    BIN_DIR: 'windows-arm64'
    ARCH: 'ARM64'
    CONFIG: 'Release'
    BIN_NAME: 'test_Ray.exe'
    UNITY: 'ON'
    VK_IMPL: 'OFF'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder

windows-arm64-build-dbg-job:
  variables:
    BIN_DIR: 'windows-arm64'
    ARCH: 'ARM64'
    CONFIG: 'Debug'
    BIN_NAME: 'test_Ray-dbg.exe'
    UNITY: 'OFF'
    VK_IMPL: 'OFF'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-build-dev-job:
  variables:
    BIN_DIR: 'windows-arm64'
    ARCH: 'ARM64'
    CONFIG: 'RelWithDebInfo'
    BIN_NAME: 'test_Ray-dev.exe'
    UNITY: 'OFF'
    VK_IMPL: 'OFF'
    DX_IMPL: 'ON'
  extends:
    - .windows-build-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-build-rel-job:
  variables:
    BIN_DIR: 'linux-x86_64'
    CONFIG: 'Release'
    BIN_NAME: 'test_Ray'
    UNITY: 'ON'
  extends:
    - .linux-build-job
  tags:
    - linux,builder

linux-x86_64-build-dbg-job:
  variables:
    BIN_DIR: 'linux-x86_64'
    CONFIG: 'Debug'
    BIN_NAME: 'test_Ray-dbg'
    UNITY: 'OFF'
  extends:
    - .linux-build-job
  tags:
    - linux,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-build-dev-job:
  variables:
    BIN_DIR: 'linux-x86_64'
    CONFIG: 'RelWithDebInfo'
    BIN_NAME: 'test_Ray-dev'
    UNITY: 'OFF'
  extends:
    - .linux-build-job
  tags:
    - linux,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-build-tsan-job:
  variables:
    BIN_DIR: 'linux-x86_64'
    CONFIG: 'Tsan'
    BIN_NAME: 'test_Ray-tsan'
    UNITY: 'OFF'
  extends:
    - .linux-build-job
  tags:
    - linux,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-shaders-check-job:
  extends:
    - .linux-shaders-check-job
  tags:
    - linux,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

macos-universal-build-rel-job:
  variables:
    CONFIG: 'Release'
    BIN_NAME: 'test_Ray'
    UNITY: 'ON'
  extends:
    - .macos-universal-build-job
  tags:
    - macos,builder

macos-universal-build-dbg-job:
  variables:
    CONFIG: 'Debug'
    BIN_NAME: 'test_Ray-dbg'
    UNITY: 'OFF'
  extends:
    - .macos-universal-build-job
  tags:
    - macos,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

macos-universal-build-dev-job:
  variables:
    CONFIG: 'RelWithDebInfo'
    BIN_NAME: 'test_Ray-dev'
    UNITY: 'OFF'
  extends:
    - .macos-universal-build-job
  tags:
    - macos,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64

windows-x86_64-cpu-sse2-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch SSE2'
    SDE_TEST_ARGS: '-p4p'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,win10
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-sse41-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch SSE41'
    SDE_TEST_ARGS: '-pnr'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,win10
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX'
    SDE_TEST_ARGS: '-snb'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx2-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX2'
    SDE_TEST_ARGS: '-hsw'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-avx512-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--arch AVX512'
    SDE_TEST_ARGS: '-future'
  extends:
    - .windows-sde-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-test-asan-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-asan-job
  needs:
    - windows-x86_64-build-asan-job
  tags:
    - windows,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-nv-test-asan-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
    ASAN_OPTIONS: 'windows_hook_legacy_allocators=false'
  extends:
    - .windows-test-asan-job
  needs:
    - windows-x86_64-build-asan-job
  tags:
    - windows,x86_64,nv
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,amd

windows-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,nv

windows-x86_64-gpu-xe-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Xe --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,xe

windows-x86_64-gpu-arc-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Arc --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,arc

windows-arm64-cpu-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64

windows-arm64-gpu-adreno-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64,adreno

windows-arm64-cpu-perf-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu --time_limit 3.5'
  extends:
    - .windows-perf-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64,perf
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-gpu-perf-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nocpu --time_limit 6.62'
  extends:
    - .windows-perf-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64,perf
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-cpu-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64

linux-x86_64-cpu-tsan-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-tsan-job
  needs:
    - linux-x86_64-build-tsan-job
  tags:
    - linux,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,nv

linux-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,amd

macos-x86_64-cpu-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-rel-job
  tags:
    - macos,x86_64

macos-arm64-cpu-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-rel-job
  tags:
    - macos,arm64

macos-arm64-gpu-m1-test-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .test-job
  needs:
    - macos-universal-build-rel-job
  tags:
    - macos,arm64,m1

deploy-job:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  needs:
    - windows-x86_64-build-rel-job
    - job: windows-x86_64-build-dbg-job
      optional: true
    - job: windows-x86_64-build-dev-job
      optional: true
    - job: windows-x86_64-build-asan-job
      optional: true
    - windows-arm64-build-rel-job
    - job: windows-arm64-build-dbg-job
      optional: true
    - job: windows-arm64-build-dev-job
      optional: true
    - linux-x86_64-build-rel-job
    - job: linux-x86_64-build-dbg-job
      optional: true
    - job: linux-x86_64-build-dev-job
      optional: true
    - job: linux-x86_64-build-tsan-job
      optional: true
    - macos-universal-build-rel-job
    - job: macos-universal-build-dbg-job
      optional: true
    - job: macos-universal-build-dev-job
      optional: true
  artifacts:
    paths:
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
    expire_in: 1 week
  tags:
    - deployer
  rules:
    - if: $CI_COMMIT_BRANCH
