stages:
  - build
  - test
  - test-img
  - deploy

.windows-x86_64-build-rel-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - |
      function Invoke-Environment {
        param
        (
            # Any cmd shell command, normally a configuration batch file.
            [Parameter(Mandatory=$true)]
            [string] $Command
        )

        $Command = "`"" + $Command + "`""
        cmd /c "$Command > nul 2>&1 && set" | . { process {
            if ($_ -match '^([^=]+)=(.*)') {
                [System.Environment]::SetEnvironmentVariable($matches[1], $matches[2])
            }
        }}
      }
    - 'if (Test-Path "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat") { Invoke-Environment "C:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat" }'
    - 'if (Test-Path "D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat") { Invoke-Environment "D:\Program Files\Microsoft Visual Studio\2022\Community\VC\Auxiliary\Build\vcvars64.bat" }'
    - mkdir build
    - cd build
    - cmake .. -G "Ninja" -DCMAKE_UNITY_BUILD=ON -DCMAKE_BUILD_TYPE=Release
    - cd ..
    - cmake --build build --config Release --parallel 16
    - echo "Compile complete."
    - mkdir windows-x86_64
    - copy build/src/Ray/tests/test_Ray.exe windows-x86_64
    - copy build/src/SW/tests/test_SW.exe windows-x86_64
    - copy build/src/Sys/tests/test_Sys.exe windows-x86_64
    - copy DemoApp.exe windows-x86_64
  artifacts:
    name: windows-x86_64
    paths:
      - windows-x86_64/
    expire_in: 1 week

.windows-x86_64-build-dev-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config RelWithDebInfo --parallel 16
    - echo "Compile complete."
    - mkdir windows-x86_64
    - copy build/src/Ray/tests/RelWithDebInfo/test_Ray-dev.exe windows-x86_64
    - copy build/src/SW/tests/RelWithDebInfo/test_SW.exe windows-x86_64
    - copy build/src/Sys/tests/RelWithDebInfo/test_Sys-dev.exe windows-x86_64
    - copy DemoApp-dev.exe windows-x86_64
  artifacts:
    name: windows-x86_64
    paths:
      - windows-x86_64/
    expire_in: 1 week

.windows-x86_64-build-dbg-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A x64 -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config Debug --parallel 16
    - echo "Compile complete."
    - mkdir windows-x86_64
    - copy build/src/Ray/tests/Debug/test_Ray-dbg.exe windows-x86_64
    - copy build/src/SW/tests/Debug/test_SW.exe windows-x86_64
    - copy build/src/Sys/tests/Debug/test_Sys-dbg.exe windows-x86_64
    - copy DemoApp-dbg.exe windows-x86_64
  artifacts:
    name: windows-x86_64
    paths:
      - windows-x86_64/
    expire_in: 1 week

.windows-x86_64-build-clang-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A x64 -T ClangCL -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config Release --parallel 16
    - cmake --build build --target ALL_BUILD --config Debug --parallel 16
    - cmake --build build --target ALL_BUILD --config RelWithDebInfo --parallel 16
    - echo "Compile complete."
    - mkdir windows-x86_64_clang
    - copy build/src/Ray/tests/Release/test_Ray.exe windows-x86_64_clang
    - copy build/src/SW/tests/Release/test_SW.exe windows-x86_64_clang
    - copy build/src/Sys/tests/Release/test_Sys.exe windows-x86_64_clang
    - copy DemoApp.exe windows-x86_64_clang
  artifacts:
    name: windows-x86_64_clang
    paths:
      - windows-x86_64_clang/
    expire_in: 1 week

.windows-arm64-build-rel-job:
  stage: build
  tags:
    - windows
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -G "Visual Studio 17 2022" -A ARM64 -DCMAKE_UNITY_BUILD=ON -DENABLE_VK_IMPL=OFF -DENABLE_DX_IMPL=ON
    - cd ..
    - cmake --build build --target ALL_BUILD --config Release --parallel 16
    - echo "Compile complete."
    - mkdir windows-arm64
    - copy build/src/Ray/tests/Release/test_Ray.exe windows-arm64
    - copy build/src/SW/tests/Release/test_SW.exe windows-arm64
    - copy build/src/Sys/tests/Release/test_Sys.exe windows-arm64
    - copy DemoApp.exe windows-arm64
  artifacts:
    name: windows-arm64
    paths:
      - windows-arm64/
    expire_in: 1 week

.linux-x86_64-build-rel-job:
  stage: build
  tags:
    - linux
  script:
    - echo "Compiling the code..."
    - python src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_BUILD_TYPE=Release -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - echo "Compile complete."
    - mkdir linux-x86_64
    - cp build/src/Ray/tests/test_Ray linux-x86_64
    - cp build/src/SW/tests/test_SW linux-x86_64
    - cp build/src/Sys/tests/test_Sys linux-x86_64
    - cp DemoApp linux-x86_64
  artifacts:
    paths:
      - linux-x86_64/
    expire_in: 1 week

.macos-x86_64-build-rel-job:
  stage: build
  tags:
    - macos
  script:
    - echo "Compiling the code..."
    - python3 src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_APPLE_SILICON_PROCESSOR=x86_64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - echo "Compile complete."
    - mkdir macos-x86_64
    - cp build/src/Ray/tests/test_Ray macos-x86_64
    - cp build/src/SW/tests/test_SW macos-x86_64
    - cp build/src/Sys/tests/test_Sys macos-x86_64
    - cp DemoApp macos-x86_64
  artifacts:
    paths:
      - macos-x86_64/
    expire_in: 1 week

.macos-arm64-build-rel-job:
  stage: build
  tags:
    - macos
  script:
    - echo "Compiling the code..."
    - python3 src/Ray/scripts/update_version_string.py src/DemoApp/DemoApp.cpp
    - mkdir build
    - cd build
    - cmake .. -DCMAKE_APPLE_SILICON_PROCESSOR=arm64 -DCMAKE_BUILD_TYPE=Release -DCMAKE_UNITY_BUILD=ON
    - cd ..
    - cmake --build build --target all --parallel 16
    - echo "Compile complete."
    - mkdir macos-arm64
    - cp build/src/Ray/tests/test_Ray macos-arm64
    - cp build/src/SW/tests/test_SW macos-arm64
    - cp build/src/Sys/tests/test_Sys macos-arm64
    - cp DemoApp macos-arm64
  artifacts:
    paths:
      - macos-arm64/
    expire_in: 1 week

.macos-universal-prepare-job:
  stage: build
  tags:
    - macos
  script:
    - echo "Making universal binary..."
    - mkdir macos-universal
    - lipo -create -output macos-universal/DemoApp macos-x86_64/DemoApp macos-arm64/DemoApp
  artifacts:
    paths:
      - macos-universal/
    expire_in: 1 week

.windows-test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - '& git clean -fx -e "$BIN_DIR"'
    - echo "Running tests..."
    - '& "$BIN_DIR/test_SW"'
    - '& "$BIN_DIR/test_Sys"'
    - cd src/Ray/tests
    - '& "../../../$BIN_DIR/test_Ray" --mt $TEST_ARGS.split(" ") $AUX_TEST_ARGS.split(" ") | tee test_data/output.txt'
    - cd ../../../
  after_script:
    - mkdir $CI_JOB_NAME
    - cp src/Ray/tests/test_data/material_*.tga ./$CI_JOB_NAME
    - cp src/Ray/tests/test_data/errors.txt ./$CI_JOB_NAME
    - cp src/Ray/tests/test_data/output.txt ./$CI_JOB_NAME
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - $CI_JOB_NAME
    expire_in: 1 week

.windows-test-img-job:
  stage: test-img
  script:
    - echo "Cleaning repository..."
    - '& git clean -fx -e "$BIN_DIR"'
    - echo "Running image tests..."
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/villa_cycles.png --output_exr --output_aux --max_samples 256 --psnr 28.86 --threshold 4527 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 0'
    #- '& "$BIN_DIR/DemoApp" -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/villa_pool_cycles.png --output_exr --output_aux --max_samples 256 --psnr 26.39 --threshold 29608 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 1'
    #- '& "$BIN_DIR/DemoApp" -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/villa_garage_cycles.png --output_exr --output_aux --max_samples 256 --psnr 30.91 --threshold 6953 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 2'
    #- '& "$BIN_DIR/DemoApp" -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/villa_bathroom_cycles.png --output_exr --output_aux --max_samples 256 --psnr 35.21 --threshold 1258 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 3'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/mustang.json -w 960 -h 600 $AUX_TEST_ARGS.split(" ") -ref assets/references/mustang_cycles.png --output_exr --output_aux --max_samples 256 --psnr 34.56 --threshold 1854 --refr_depth 12 --total_depth 12 --clamp_indirect 10.0'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/bistro.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/bistro_cycles.png --output_exr --output_aux --max_samples 256 --psnr 32.65 --threshold 1733 --clamp_indirect 10.0'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/bistro_night.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/bistro_night_cycles.png --output_exr --output_aux --max_samples 256 --psnr 27.41 --threshold 13071 --clamp_indirect 10.0 --camera 0'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/bistro_night.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/bistro_interior_cycles.png --output_exr --output_aux --max_samples 256 --psnr 23.47 --threshold 45281 --clamp_indirect 10.0 --camera 1'
    #- '& "$BIN_DIR/DemoApp" -s assets/scenes/italian_flat.json -w 900 -h 550 $AUX_TEST_ARGS.split(" ") -ref assets/references/italian_flat_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 8 --spec_depth 8 --refr_depth 12 --total_depth 12 --psnr 33.9 --threshold 488 --clamp_indirect 8.0 --iteration_steps 8 --denoise'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/italian_flat.json -w 900 -h 550 $AUX_TEST_ARGS.split(" ") -ref assets/references/italian_flat_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 8 --spec_depth 8 --refr_depth 12 --total_depth 12 --psnr 22.13 --threshold 62326 --clamp_indirect 8.0'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/ai043_01.json -w 700 -h 477 $AUX_TEST_ARGS.split(" ") -ref assets/references/ai043_01_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 2 --spec_depth 2 --psnr 29.12 --threshold 2319'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/sponza.json -w 960 -h 540 $AUX_TEST_ARGS.split(" ") -ref assets/references/sponza_cycles.png --output_exr --output_aux --min_samples 128 --max_samples 256 --variance_threshold 0.00035 --psnr 28.14 --threshold 3981 --diff_depth 2 --max_tex_res 2048'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/coffee_maker.json -w 640 -h 800 $AUX_TEST_ARGS.split(" ") -ref assets/references/coffee_maker_cycles.png --output_exr --output_aux --max_samples 256 --psnr 32.72 --threshold 307 --refr_depth 12 --total_depth 12'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/bathroom.json -w 632 -h 840 $AUX_TEST_ARGS.split(" ") -ref assets/references/bathroom_cycles.png --output_exr --output_aux --max_samples 256 --psnr 24.34 --threshold 36071 --refr_depth 12 --total_depth 12 --clamp_indirect 0.0'
    - '& "$BIN_DIR/DemoApp" -s assets/scenes/staircase.json -w 720 -h 900 $AUX_TEST_ARGS.split(" ") -ref assets/references/staircase_cycles.png --output_exr --output_aux --max_samples 256 --psnr 35.49 --threshold 522 --refr_depth 12 --total_depth 12'
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - ./*.png
      - ./*.exr
    expire_in: 1 week

.test-job:
  stage: test
  script:
    - echo "Cleaning repository..."
    - git clean -fx -e $BIN_DIR
    - echo "Running tests..."
    - $BIN_DIR/test_SW
    - $BIN_DIR/test_Sys
    - cd src/Ray/tests
    - ../../../$BIN_DIR/test_Ray --mt $TEST_ARGS $AUX_TEST_ARGS | tee test_data/output.txt
    - cd ../../../
  after_script:
    - mkdir $CI_JOB_NAME
    - cp src/Ray/tests/test_data/material_*.tga ./$CI_JOB_NAME
    - cp src/Ray/tests/test_data/errors.txt ./$CI_JOB_NAME
    - cp src/Ray/tests/test_data/output.txt ./$CI_JOB_NAME
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - $CI_JOB_NAME
    expire_in: 1 week

.test-img-job:
  stage: test-img
  script:
    - echo "Cleaning repository..."
    - git clean -fx -e $BIN_DIR
    - echo "Running image tests..."
    - ./$BIN_DIR/DemoApp -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/villa_cycles.png --output_exr --output_aux --max_samples 256 --psnr 28.86 --threshold 4527 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 0
    #- ./$BIN_DIR/DemoApp -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/villa_pool_cycles.png --output_exr --output_aux --max_samples 256 --psnr 26.39 --threshold 29608 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 1
    #- ./$BIN_DIR/DemoApp -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/villa_garage_cycles.png --output_exr --output_aux --max_samples 256 --psnr 30.91 --threshold 6953 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 2
    #- ./$BIN_DIR/DemoApp -s assets/scenes/villa.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/villa_bathroom_cycles.png --output_exr --output_aux --max_samples 256 --psnr 35.21 --threshold 1258 --total_depth 16 --transp_depth 48 --iteration_steps 8 --clamp_indirect 0.0 --denoise --camera 3
    - ./$BIN_DIR/DemoApp -s assets/scenes/mustang.json -w 960 -h 600 $AUX_TEST_ARGS -ref assets/references/mustang_cycles.png --output_exr --output_aux --max_samples 256 --psnr 34.56 --threshold 1854 --refr_depth 12 --total_depth 12 --clamp_indirect 10.0
    - ./$BIN_DIR/DemoApp -s assets/scenes/bistro.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/bistro_cycles.png --output_exr --output_aux --max_samples 256 --psnr 32.65 --threshold 1733 --clamp_indirect 10.0
    - ./$BIN_DIR/DemoApp -s assets/scenes/bistro_night.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/bistro_night_cycles.png --output_exr --output_aux --max_samples 256 --psnr 27.41 --threshold 13071 --clamp_indirect 10.0 --camera 0
    - ./$BIN_DIR/DemoApp -s assets/scenes/bistro_night.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/bistro_interior_cycles.png --output_exr --output_aux --max_samples 256 --psnr 23.47 --threshold 45281 --clamp_indirect 10.0 --camera 1
    #- ./$BIN_DIR/DemoApp -s assets/scenes/italian_flat.json -w 900 -h 550 $AUX_TEST_ARGS -ref assets/references/italian_flat_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 8 --spec_depth 8 --refr_depth 12 --total_depth 12 --psnr 33.9 --threshold 488 --clamp_indirect 8.0 --iteration_steps 8 --denoise
    - ./$BIN_DIR/DemoApp -s assets/scenes/italian_flat.json -w 900 -h 550 $AUX_TEST_ARGS -ref assets/references/italian_flat_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 8 --spec_depth 8 --refr_depth 12 --total_depth 12 --psnr 22.13 --threshold 62326 --clamp_indirect 8.0
    - ./$BIN_DIR/DemoApp -s assets/scenes/ai043_01.json -w 700 -h 477 $AUX_TEST_ARGS -ref assets/references/ai043_01_cycles.png --output_exr --output_aux --max_samples 256 --diff_depth 2 --spec_depth 2 --psnr 29.12 --threshold 2319
    - ./$BIN_DIR/DemoApp -s assets/scenes/sponza.json -w 960 -h 540 $AUX_TEST_ARGS -ref assets/references/sponza_cycles.png --output_exr --output_aux --min_samples 128 --max_samples 256 --variance_threshold 0.00035 --psnr 28.14 --threshold 3981 --diff_depth 2 --max_tex_res 2048
    - ./$BIN_DIR/DemoApp -s assets/scenes/coffee_maker.json -w 640 -h 800 $AUX_TEST_ARGS -ref assets/references/coffee_maker_cycles.png --output_exr --output_aux --max_samples 256 --psnr 32.72 --threshold 307 --refr_depth 12 --total_depth 12
    - ./$BIN_DIR/DemoApp -s assets/scenes/bathroom.json -w 632 -h 840 $AUX_TEST_ARGS -ref assets/references/bathroom_cycles.png --output_exr --output_aux --max_samples 256 --psnr 24.34 --threshold 36071 --refr_depth 12 --total_depth 12 --clamp_indirect 0.0
    - ./$BIN_DIR/DemoApp -s assets/scenes/staircase.json -w 720 -h 900 $AUX_TEST_ARGS -ref assets/references/staircase_cycles.png --output_exr --output_aux --max_samples 256 --psnr 35.49 --threshold 522 --refr_depth 12 --total_depth 12
  artifacts:
    when: always
    name: "$CI_JOB_NAME"
    paths:
      - ./*.png
      - ./*.exr
    expire_in: 1 week

windows-x86_64-build-rel-job:
  extends:
    - .windows-x86_64-build-rel-job
  tags:
    - windows,builder

windows-x86_64-build-dev-job:
  extends:
    - .windows-x86_64-build-dev-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-build-dbg-job:
  extends:
    - .windows-x86_64-build-dbg-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-build-clang-job:
  extends:
    - .windows-x86_64-build-clang-job
  tags:
    - windows,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-build-rel-job:
  extends:
    - .windows-arm64-build-rel-job
  tags:
    - windows,builder

linux-x86_64-build-rel-job:
  extends:
    - .linux-x86_64-build-rel-job
  tags:
    - linux,builder

macos-x86_64-build-rel-job:
  extends:
    - .macos-x86_64-build-rel-job
  tags:
    - macos,x86_64,builder

macos-arm64-build-rel-job:
  extends:
    - .macos-arm64-build-rel-job
  tags:
    - macos,arm64,builder

macos-universal-prepare-job:
  extends:
    - .macos-universal-prepare-job
  needs:
    - macos-x86_64-build-rel-job
    - macos-arm64-build-rel-job
  tags:
    - macos,builder
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-cpu-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64

windows-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,amd

windows-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,nv

windows-x86_64-gpu-xe-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Xe --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,xe

windows-x86_64-gpu-arc-test-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Arc --nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,arc

windows-x86_64-cpu-test-img-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-nv-test-img-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,nv
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-amd-test-img-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,amd
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-xe-test-img-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Xe --nocpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,xe
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-x86_64-gpu-arc-test-img-job:
  variables:
    BIN_DIR: windows-x86_64
    AUX_TEST_ARGS: '-d Arc --nocpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-x86_64-build-rel-job
  tags:
    - windows,x86_64,arc
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-cpu-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64

windows-arm64-gpu-adreno-test-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .windows-test-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64,adreno

windows-arm64-cpu-test-img-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

windows-arm64-gpu-adreno-test-img-job:
  variables:
    BIN_DIR: windows-arm64
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .windows-test-img-job
  needs:
    - windows-arm64-build-rel-job
  tags:
    - windows,arm64,adreno
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-cpu-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64

linux-x86_64-gpu-nv-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,nv

linux-x86_64-gpu-amd-test-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .test-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,amd

linux-x86_64-cpu-test-img-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-img-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-gpu-nv-test-img-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d NV --nocpu'
  extends:
    - .test-img-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,nv
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

linux-x86_64-gpu-amd-test-img-job:
  variables:
    BIN_DIR: linux-x86_64
    AUX_TEST_ARGS: '-d AMD --nocpu'
  extends:
    - .test-img-job
  needs:
    - linux-x86_64-build-rel-job
  tags:
    - linux,x86_64,amd
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

macos-x86_64-cpu-test-job:
  variables:
    BIN_DIR: macos-x86_64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-x86_64-build-rel-job
  tags:
    - macos,x86_64

macos-x86_64-cpu-test-img-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-img-job
  needs:
    - macos-universal-prepare-job
  tags:
    - macos,x86_64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

macos-arm64-cpu-test-job:
  variables:
    BIN_DIR: macos-arm64
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-job
  needs:
    - macos-arm64-build-rel-job
  tags:
    - macos,arm64

macos-arm64-gpu-m1-test-job:
  variables:
    BIN_DIR: macos-arm64
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .test-job
  needs:
    - macos-arm64-build-rel-job
  tags:
    - macos,arm64,m1

macos-arm64-cpu-test-img-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nogpu'
  extends:
    - .test-img-job
  needs:
    - macos-universal-prepare-job
  tags:
    - macos,arm64
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

macos-arm64-gpu-m1-test-img-job:
  variables:
    BIN_DIR: macos-universal
    AUX_TEST_ARGS: '--nocpu'
  extends:
    - .test-img-job
  needs:
    - macos-universal-prepare-job
  tags:
    - macos,arm64,m1
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule"

analyze-job:
  stage: deploy
  script:
    - echo "Analyzing test results..."
    - python src/Ray/scripts/analyze_output.py linux-x86_64-cpu-test-job/output.txt linux-x86_64-gpu-amd-test-job/output.txt linux-x86_64-gpu-nv-test-job/output.txt macos-arm64-cpu-test-job/output.txt macos-arm64-gpu-m1-test-job/output.txt macos-x86_64-cpu-test-job/output.txt windows-arm64-cpu-test-job/output.txt windows-arm64-gpu-adreno-test-job/output.txt windows-x86_64-cpu-test-job/output.txt windows-x86_64-gpu-amd-test-job/output.txt windows-x86_64-gpu-arc-test-job/output.txt windows-x86_64-gpu-nv-test-job/output.txt windows-x86_64-gpu-xe-test-job/output.txt
  needs:
    - linux-x86_64-cpu-test-job
    - linux-x86_64-gpu-amd-test-job
    - linux-x86_64-gpu-nv-test-job
    - macos-arm64-cpu-test-job
    - macos-arm64-gpu-m1-test-job
    - macos-x86_64-cpu-test-job
    - windows-arm64-cpu-test-job
    - windows-arm64-gpu-adreno-test-job
    - windows-x86_64-cpu-test-job
    - windows-x86_64-gpu-amd-test-job
    - windows-x86_64-gpu-arc-test-job
    - windows-x86_64-gpu-nv-test-job
    - windows-x86_64-gpu-xe-test-job
  tags:
    - deployer
  rules:
    - if: $CI_COMMIT_BRANCH
  when: always

deploy-job:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - echo "Application successfully deployed."
  needs:
    - linux-x86_64-build-rel-job
    - macos-x86_64-build-rel-job
    - macos-arm64-build-rel-job
    - job: macos-universal-prepare-job
      optional: true
    - windows-arm64-build-rel-job
    - windows-x86_64-build-rel-job
  artifacts:
    paths:
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
    expire_in: 1 week
  tags:
    - deployer
  rules:
    - if: $CI_COMMIT_BRANCH

deploy-job-full-base:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - cp windows-x86_64/DemoApp.exe ./
    - echo "Application successfully deployed."
  needs:
    - linux-x86_64-build-rel-job
    - macos-universal-prepare-job
    - windows-arm64-build-rel-job
    - windows-x86_64-build-rel-job
  artifacts:
    name: "base_$CI_COMMIT_TAG"
    paths:
      - assets/fonts/
      - assets/meshes/bathroom/
      - assets/meshes/coffee_maker/
      - assets/meshes/mat_test/
      - assets/meshes/staircase.bin
      - assets/scenes/bathroom.json
      - assets/scenes/coffee_maker.json
      - assets/scenes/mat_test.json
      - assets/scenes/staircase.json
      - assets/textures/bathroom/
      - assets/textures/staircase/
      - assets/textures/mat_test/
      - assets/config.json
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
      - DemoApp.exe
      - run_bathroom_cpu.bat
      - run_bathroom_gpu.bat
      - run_coffee_cpu.bat
      - run_coffee_gpu.bat
      - run_staircase_cpu.bat
      - run_staircase_gpu.bat
    expire_in: 1 week
  tags:
    - deployer,linux
  rules:
    - if: $CI_COMMIT_TAG

deploy-job-full-sponza:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - cp windows-x86_64/DemoApp.exe ./
    - echo "Application successfully deployed."
  needs:
    - linux-x86_64-build-rel-job
    - macos-universal-prepare-job
    - windows-arm64-build-rel-job
    - windows-x86_64-build-rel-job
  artifacts:
    name: "sponza_$CI_COMMIT_TAG"
    paths:
      - assets/fonts/
      - assets/meshes/sponza/
      - assets/scenes/sponza.json
      - assets/textures/sponza/
      - assets/config.json
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
      - DemoApp.exe
      - run_sponza_cpu.bat
      - run_sponza_gpu.bat
    expire_in: 1 week
  tags:
    - deployer,linux
  rules:
    - if: $CI_COMMIT_TAG

deploy-job-full-ai043:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - cp windows-x86_64/DemoApp.exe ./
    - echo "Application successfully deployed."
  needs:
    - linux-x86_64-build-rel-job
    - macos-universal-prepare-job
    - windows-arm64-build-rel-job
    - windows-x86_64-build-rel-job
  artifacts:
    name: "ai043_$CI_COMMIT_TAG"
    paths:
      - assets/fonts/
      - assets/meshes/ai043_01/
      - assets/scenes/ai043_01.json
      - assets/textures/ai043_01/
      - assets/config.json
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
      - DemoApp.exe
      - run_ai043_cpu.bat
      - run_ai043_gpu.bat
    expire_in: 1 week
  tags:
    - deployer,linux
  rules:
    - if: $CI_COMMIT_TAG

deploy-job-full-italian_flat:
  stage: deploy
  variables:
    GIT_STRATEGY: none
  script:
    - echo "Deploying application..."
    - cp windows-x86_64/DemoApp.exe ./
    - echo "Application successfully deployed."
  needs:
    - linux-x86_64-build-rel-job
    - macos-universal-prepare-job
    - windows-arm64-build-rel-job
    - windows-x86_64-build-rel-job
  artifacts:
    name: "italian_flat_$CI_COMMIT_TAG"
    paths:
      - assets/fonts/
      - assets/meshes/italian_flat/
      - assets/scenes/italian_flat.json
      - assets/textures/italian_flat/
      - assets/config.json
      - windows-x86_64/
      - windows-arm64/
      - linux-x86_64/
      - macos-universal/
      - DemoApp.exe
      - run_italian_flat_cpu.bat
      - run_italian_flat_gpu.bat
    expire_in: 1 week
  tags:
    - deployer,linux
  rules:
    - if: $CI_COMMIT_TAG
